//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnionMall.ADServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/UBN.Security.Sms")]
    [System.SerializableAttribute()]
    public partial class Response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomProfile", Namespace="http://schemas.datacontract.org/2004/07/UBN.Security.Sms")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UnionMall.ADServiceRef.UserProfile))]
    public partial class CustomProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LimitAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Misc1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Misc2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Misc3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Misc4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TillAccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAccessModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchCode {
            get {
                return this.BranchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchCodeField, value) != true)) {
                    this.BranchCodeField = value;
                    this.RaisePropertyChanged("BranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchName {
            get {
                return this.BranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchNameField, value) != true)) {
                    this.BranchNameField = value;
                    this.RaisePropertyChanged("BranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LimitAmount {
            get {
                return this.LimitAmountField;
            }
            set {
                if ((this.LimitAmountField.Equals(value) != true)) {
                    this.LimitAmountField = value;
                    this.RaisePropertyChanged("LimitAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Misc1 {
            get {
                return this.Misc1Field;
            }
            set {
                if ((this.Misc1Field.Equals(value) != true)) {
                    this.Misc1Field = value;
                    this.RaisePropertyChanged("Misc1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Misc2 {
            get {
                return this.Misc2Field;
            }
            set {
                if ((this.Misc2Field.Equals(value) != true)) {
                    this.Misc2Field = value;
                    this.RaisePropertyChanged("Misc2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Misc3 {
            get {
                return this.Misc3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Misc3Field, value) != true)) {
                    this.Misc3Field = value;
                    this.RaisePropertyChanged("Misc3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Misc4 {
            get {
                return this.Misc4Field;
            }
            set {
                if ((this.Misc4Field.Equals(value) != true)) {
                    this.Misc4Field = value;
                    this.RaisePropertyChanged("Misc4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgIDField, value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherInfo {
            get {
                return this.OtherInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherInfoField, value) != true)) {
                    this.OtherInfoField = value;
                    this.RaisePropertyChanged("OtherInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortCode {
            get {
                return this.SortCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SortCodeField, value) != true)) {
                    this.SortCodeField = value;
                    this.RaisePropertyChanged("SortCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TillAccountNo {
            get {
                return this.TillAccountNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TillAccountNoField, value) != true)) {
                    this.TillAccountNoField = value;
                    this.RaisePropertyChanged("TillAccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccessMode {
            get {
                return this.UserAccessModeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccessModeField, value) != true)) {
                    this.UserAccessModeField = value;
                    this.RaisePropertyChanged("UserAccessMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZoneCode {
            get {
                return this.ZoneCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneCodeField, value) != true)) {
                    this.ZoneCodeField = value;
                    this.RaisePropertyChanged("ZoneCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://schemas.datacontract.org/2004/07/UBN.Security.Sms")]
    [System.SerializableAttribute()]
    public partial class UserProfile : UnionMall.ADServiceRef.CustomProfile {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FCUBSUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADUserID {
            get {
                return this.ADUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ADUserIDField, value) != true)) {
                    this.ADUserIDField = value;
                    this.RaisePropertyChanged("ADUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeIdField, value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FCUBSUserID {
            get {
                return this.FCUBSUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FCUBSUserIDField, value) != true)) {
                    this.FCUBSUserIDField = value;
                    this.RaisePropertyChanged("FCUBSUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GradeLevel {
            get {
                return this.GradeLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeLevelField, value) != true)) {
                    this.GradeLevelField = value;
                    this.RaisePropertyChanged("GradeLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNumber {
            get {
                return this.MobileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNumberField, value) != true)) {
                    this.MobileNumberField = value;
                    this.RaisePropertyChanged("MobileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelephoneNumber {
            get {
                return this.TelephoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneNumberField, value) != true)) {
                    this.TelephoneNumberField = value;
                    this.RaisePropertyChanged("TelephoneNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Module", Namespace="http://schemas.datacontract.org/2004/07/UBN.AuthenticationViaAD.Cls")]
    [System.SerializableAttribute()]
    public partial class Module : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ClientIpk__BackingFieldField;
        
        private string CreatedByk__BackingFieldField;
        
        private System.Nullable<System.DateTime> DateCreatedk__BackingFieldField;
        
        private System.Nullable<System.DateTime> DateUpdatedk__BackingFieldField;
        
        private string InHousek__BackingFieldField;
        
        private string IsEnabledk__BackingFieldField;
        
        private string ModuleDesck__BackingFieldField;
        
        private string ModuleIdk__BackingFieldField;
        
        private string Ownerk__BackingFieldField;
        
        private string TwoFactorClassIdk__BackingFieldField;
        
        private string UpdatedByk__BackingFieldField;
        
        private string Xguidk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ClientIp>k__BackingField", IsRequired=true)]
        public string ClientIpk__BackingField {
            get {
                return this.ClientIpk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIpk__BackingFieldField, value) != true)) {
                    this.ClientIpk__BackingFieldField = value;
                    this.RaisePropertyChanged("ClientIpk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CreatedBy>k__BackingField", IsRequired=true)]
        public string CreatedByk__BackingField {
            get {
                return this.CreatedByk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByk__BackingFieldField, value) != true)) {
                    this.CreatedByk__BackingFieldField = value;
                    this.RaisePropertyChanged("CreatedByk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DateCreated>k__BackingField", IsRequired=true)]
        public System.Nullable<System.DateTime> DateCreatedk__BackingField {
            get {
                return this.DateCreatedk__BackingFieldField;
            }
            set {
                if ((this.DateCreatedk__BackingFieldField.Equals(value) != true)) {
                    this.DateCreatedk__BackingFieldField = value;
                    this.RaisePropertyChanged("DateCreatedk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DateUpdated>k__BackingField", IsRequired=true)]
        public System.Nullable<System.DateTime> DateUpdatedk__BackingField {
            get {
                return this.DateUpdatedk__BackingFieldField;
            }
            set {
                if ((this.DateUpdatedk__BackingFieldField.Equals(value) != true)) {
                    this.DateUpdatedk__BackingFieldField = value;
                    this.RaisePropertyChanged("DateUpdatedk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<InHouse>k__BackingField", IsRequired=true)]
        public string InHousek__BackingField {
            get {
                return this.InHousek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.InHousek__BackingFieldField, value) != true)) {
                    this.InHousek__BackingFieldField = value;
                    this.RaisePropertyChanged("InHousek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsEnabled>k__BackingField", IsRequired=true)]
        public string IsEnabledk__BackingField {
            get {
                return this.IsEnabledk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.IsEnabledk__BackingFieldField, value) != true)) {
                    this.IsEnabledk__BackingFieldField = value;
                    this.RaisePropertyChanged("IsEnabledk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ModuleDesc>k__BackingField", IsRequired=true)]
        public string ModuleDesck__BackingField {
            get {
                return this.ModuleDesck__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleDesck__BackingFieldField, value) != true)) {
                    this.ModuleDesck__BackingFieldField = value;
                    this.RaisePropertyChanged("ModuleDesck__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ModuleId>k__BackingField", IsRequired=true)]
        public string ModuleIdk__BackingField {
            get {
                return this.ModuleIdk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIdk__BackingFieldField, value) != true)) {
                    this.ModuleIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("ModuleIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Owner>k__BackingField", IsRequired=true)]
        public string Ownerk__BackingField {
            get {
                return this.Ownerk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Ownerk__BackingFieldField, value) != true)) {
                    this.Ownerk__BackingFieldField = value;
                    this.RaisePropertyChanged("Ownerk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<TwoFactorClassId>k__BackingField", IsRequired=true)]
        public string TwoFactorClassIdk__BackingField {
            get {
                return this.TwoFactorClassIdk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.TwoFactorClassIdk__BackingFieldField, value) != true)) {
                    this.TwoFactorClassIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("TwoFactorClassIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<UpdatedBy>k__BackingField", IsRequired=true)]
        public string UpdatedByk__BackingField {
            get {
                return this.UpdatedByk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByk__BackingFieldField, value) != true)) {
                    this.UpdatedByk__BackingFieldField = value;
                    this.RaisePropertyChanged("UpdatedByk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Xguid>k__BackingField", IsRequired=true)]
        public string Xguidk__BackingField {
            get {
                return this.Xguidk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Xguidk__BackingFieldField, value) != true)) {
                    this.Xguidk__BackingFieldField = value;
                    this.RaisePropertyChanged("Xguidk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BranchReportLine", Namespace="http://schemas.datacontract.org/2004/07/UBN.AuthenticationViaAD.Cls")]
    [System.SerializableAttribute()]
    public partial class BranchReportLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string BdmEmailk__BackingFieldField;
        
        private short BranchCodek__BackingFieldField;
        
        private string CsoEmailk__BackingFieldField;
        
        private string EdEmailk__BackingFieldField;
        
        private string HboEmailk__BackingFieldField;
        
        private string RgEmailk__BackingFieldField;
        
        private string ZcEmailk__BackingFieldField;
        
        private string ZoneNamek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<BdmEmail>k__BackingField", IsRequired=true)]
        public string BdmEmailk__BackingField {
            get {
                return this.BdmEmailk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.BdmEmailk__BackingFieldField, value) != true)) {
                    this.BdmEmailk__BackingFieldField = value;
                    this.RaisePropertyChanged("BdmEmailk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<BranchCode>k__BackingField", IsRequired=true)]
        public short BranchCodek__BackingField {
            get {
                return this.BranchCodek__BackingFieldField;
            }
            set {
                if ((this.BranchCodek__BackingFieldField.Equals(value) != true)) {
                    this.BranchCodek__BackingFieldField = value;
                    this.RaisePropertyChanged("BranchCodek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CsoEmail>k__BackingField", IsRequired=true)]
        public string CsoEmailk__BackingField {
            get {
                return this.CsoEmailk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.CsoEmailk__BackingFieldField, value) != true)) {
                    this.CsoEmailk__BackingFieldField = value;
                    this.RaisePropertyChanged("CsoEmailk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<EdEmail>k__BackingField", IsRequired=true)]
        public string EdEmailk__BackingField {
            get {
                return this.EdEmailk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.EdEmailk__BackingFieldField, value) != true)) {
                    this.EdEmailk__BackingFieldField = value;
                    this.RaisePropertyChanged("EdEmailk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<HboEmail>k__BackingField", IsRequired=true)]
        public string HboEmailk__BackingField {
            get {
                return this.HboEmailk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.HboEmailk__BackingFieldField, value) != true)) {
                    this.HboEmailk__BackingFieldField = value;
                    this.RaisePropertyChanged("HboEmailk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<RgEmail>k__BackingField", IsRequired=true)]
        public string RgEmailk__BackingField {
            get {
                return this.RgEmailk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.RgEmailk__BackingFieldField, value) != true)) {
                    this.RgEmailk__BackingFieldField = value;
                    this.RaisePropertyChanged("RgEmailk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ZcEmail>k__BackingField", IsRequired=true)]
        public string ZcEmailk__BackingField {
            get {
                return this.ZcEmailk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ZcEmailk__BackingFieldField, value) != true)) {
                    this.ZcEmailk__BackingFieldField = value;
                    this.RaisePropertyChanged("ZcEmailk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ZoneName>k__BackingField", IsRequired=true)]
        public string ZoneNamek__BackingField {
            get {
                return this.ZoneNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneNamek__BackingFieldField, value) != true)) {
                    this.ZoneNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("ZoneNamek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleMin", Namespace="http://schemas.datacontract.org/2004/07/UBN.AuthenticationViaAD.Cls")]
    [System.SerializableAttribute()]
    public partial class ModuleMin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ClientIpk__BackingFieldField;
        
        private string CreatedByk__BackingFieldField;
        
        private string InHousek__BackingFieldField;
        
        private string IsEnabledk__BackingFieldField;
        
        private string ModuleDesck__BackingFieldField;
        
        private string ModuleIdk__BackingFieldField;
        
        private string Ownerk__BackingFieldField;
        
        private string TwoFactorClassIdk__BackingFieldField;
        
        private string UpdatedByk__BackingFieldField;
        
        private string Xguidk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ClientIp>k__BackingField", IsRequired=true)]
        public string ClientIpk__BackingField {
            get {
                return this.ClientIpk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIpk__BackingFieldField, value) != true)) {
                    this.ClientIpk__BackingFieldField = value;
                    this.RaisePropertyChanged("ClientIpk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CreatedBy>k__BackingField", IsRequired=true)]
        public string CreatedByk__BackingField {
            get {
                return this.CreatedByk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByk__BackingFieldField, value) != true)) {
                    this.CreatedByk__BackingFieldField = value;
                    this.RaisePropertyChanged("CreatedByk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<InHouse>k__BackingField", IsRequired=true)]
        public string InHousek__BackingField {
            get {
                return this.InHousek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.InHousek__BackingFieldField, value) != true)) {
                    this.InHousek__BackingFieldField = value;
                    this.RaisePropertyChanged("InHousek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsEnabled>k__BackingField", IsRequired=true)]
        public string IsEnabledk__BackingField {
            get {
                return this.IsEnabledk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.IsEnabledk__BackingFieldField, value) != true)) {
                    this.IsEnabledk__BackingFieldField = value;
                    this.RaisePropertyChanged("IsEnabledk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ModuleDesc>k__BackingField", IsRequired=true)]
        public string ModuleDesck__BackingField {
            get {
                return this.ModuleDesck__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleDesck__BackingFieldField, value) != true)) {
                    this.ModuleDesck__BackingFieldField = value;
                    this.RaisePropertyChanged("ModuleDesck__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ModuleId>k__BackingField", IsRequired=true)]
        public string ModuleIdk__BackingField {
            get {
                return this.ModuleIdk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIdk__BackingFieldField, value) != true)) {
                    this.ModuleIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("ModuleIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Owner>k__BackingField", IsRequired=true)]
        public string Ownerk__BackingField {
            get {
                return this.Ownerk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Ownerk__BackingFieldField, value) != true)) {
                    this.Ownerk__BackingFieldField = value;
                    this.RaisePropertyChanged("Ownerk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<TwoFactorClassId>k__BackingField", IsRequired=true)]
        public string TwoFactorClassIdk__BackingField {
            get {
                return this.TwoFactorClassIdk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.TwoFactorClassIdk__BackingFieldField, value) != true)) {
                    this.TwoFactorClassIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("TwoFactorClassIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<UpdatedBy>k__BackingField", IsRequired=true)]
        public string UpdatedByk__BackingField {
            get {
                return this.UpdatedByk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByk__BackingFieldField, value) != true)) {
                    this.UpdatedByk__BackingFieldField = value;
                    this.RaisePropertyChanged("UpdatedByk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Xguid>k__BackingField", IsRequired=true)]
        public string Xguidk__BackingField {
            get {
                return this.Xguidk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Xguidk__BackingFieldField, value) != true)) {
                    this.Xguidk__BackingFieldField = value;
                    this.RaisePropertyChanged("Xguidk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRoleEventStatus", Namespace="http://schemas.datacontract.org/2004/07/UBN.Security.Sms")]
    [System.SerializableAttribute()]
    public partial class UserRoleEventStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateAuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckerId {
            get {
                return this.CheckerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckerIdField, value) != true)) {
                    this.CheckerIdField = value;
                    this.RaisePropertyChanged("CheckerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateAuthorized {
            get {
                return this.DateAuthorizedField;
            }
            set {
                if ((this.DateAuthorizedField.Equals(value) != true)) {
                    this.DateAuthorizedField = value;
                    this.RaisePropertyChanged("DateAuthorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EventIdField, value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakerId {
            get {
                return this.MakerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MakerIdField, value) != true)) {
                    this.MakerIdField = value;
                    this.RaisePropertyChanged("MakerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleIdField, value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://applications.unionbankng.com/ws", ConfigurationName="ADServiceRef.UBN_SMS_Service")]
    public interface UBN_SMS_Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/AdAuthenticate", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/AdAuthenticateResponse")]
        bool AdAuthenticate(string User, string Password, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/AdAuthenticate", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/AdAuthenticateResponse")]
        System.Threading.Tasks.Task<bool> AdAuthenticateAsync(string User, string Password, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/Ad2xAuthenticate", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/Ad2xAuthenticateResponse")]
        UnionMall.ADServiceRef.Response Ad2xAuthenticate(string User, string Password, string Token, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/Ad2xAuthenticate", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/Ad2xAuthenticateResponse")]
        System.Threading.Tasks.Task<UnionMall.ADServiceRef.Response> Ad2xAuthenticateAsync(string User, string Password, string Token, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/TwoXtorAuth", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/TwoXtorAuthResponse")]
        UnionMall.ADServiceRef.Response TwoXtorAuth(string User, string Token, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/TwoXtorAuth", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/TwoXtorAuthResponse")]
        System.Threading.Tasks.Task<UnionMall.ADServiceRef.Response> TwoXtorAuthAsync(string User, string Token, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GenerateTwoXtorOtp", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GenerateTwoXtorOtpResponse" +
            "")]
        UnionMall.ADServiceRef.Response GenerateTwoXtorOtp(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GenerateTwoXtorOtp", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GenerateTwoXtorOtpResponse" +
            "")]
        System.Threading.Tasks.Task<UnionMall.ADServiceRef.Response> GenerateTwoXtorOtpAsync(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetTwoXtorUserProfile", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetTwoXtorUserProfileRespo" +
            "nse")]
        UnionMall.ADServiceRef.Response GetTwoXtorUserProfile(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetTwoXtorUserProfile", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetTwoXtorUserProfileRespo" +
            "nse")]
        System.Threading.Tasks.Task<UnionMall.ADServiceRef.Response> GetTwoXtorUserProfileAsync(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserInRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserInRoleResponse")]
        bool IsUserInRole(string User, string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserInRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserInRoleResponse")]
        System.Threading.Tasks.Task<bool> IsUserInRoleAsync(string User, string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserInAdRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserInAdRoleResponse")]
        bool IsUserInAdRole(string User, string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserInAdRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserInAdRoleResponse")]
        System.Threading.Tasks.Task<bool> IsUserInAdRoleAsync(string User, string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserInCbaRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserInCbaRoleResponse")]
        bool IsUserInCbaRole(string User, string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserInCbaRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserInCbaRoleResponse")]
        System.Threading.Tasks.Task<bool> IsUserInCbaRoleAsync(string User, string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/RoleExist", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/RoleExistResponse")]
        bool RoleExist(string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/RoleExist", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/RoleExistResponse")]
        System.Threading.Tasks.Task<bool> RoleExistAsync(string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetRolesForUser", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetRolesForUserResponse")]
        string[] GetRolesForUser(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetRolesForUser", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetRolesForUserResponse")]
        System.Threading.Tasks.Task<string[]> GetRolesForUserAsync(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetAdRolesForUser", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetAdRolesForUserResponse")]
        string[] GetAdRolesForUser(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetAdRolesForUser", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetAdRolesForUserResponse")]
        System.Threading.Tasks.Task<string[]> GetAdRolesForUserAsync(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetCbaRolesForUser", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetCbaRolesForUserResponse" +
            "")]
        string[] GetCbaRolesForUser(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetCbaRolesForUser", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetCbaRolesForUserResponse" +
            "")]
        System.Threading.Tasks.Task<string[]> GetCbaRolesForUserAsync(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetUsersInRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetUsersInRoleResponse")]
        string[] GetUsersInRole(string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetUsersInRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetUsersInRoleResponse")]
        System.Threading.Tasks.Task<string[]> GetUsersInRoleAsync(string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/RemoveUserFromRoles", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/RemoveUserFromRolesRespons" +
            "e")]
        void RemoveUserFromRoles(string User, string[] Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/RemoveUserFromRoles", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/RemoveUserFromRolesRespons" +
            "e")]
        System.Threading.Tasks.Task RemoveUserFromRolesAsync(string User, string[] Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/AddUserToRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/AddUserToRoleResponse")]
        void AddUserToRole(string User, string Role, string Maker, string Checker, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/AddUserToRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/AddUserToRoleResponse")]
        System.Threading.Tasks.Task AddUserToRoleAsync(string User, string Role, string Maker, string Checker, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/AuthorizeUserRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/AuthorizeUserRoleResponse")]
        string AuthorizeUserRole(string User, string Role, string Checker, bool IsAuthorized, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/AuthorizeUserRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/AuthorizeUserRoleResponse")]
        System.Threading.Tasks.Task<string> AuthorizeUserRoleAsync(string User, string Role, string Checker, bool IsAuthorized, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/CreateRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/CreateRoleResponse")]
        void CreateRole(string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/CreateRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/CreateRoleResponse")]
        System.Threading.Tasks.Task CreateRoleAsync(string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/DeleteRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/DeleteRoleResponse")]
        void DeleteRole(string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/DeleteRole", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/DeleteRoleResponse")]
        System.Threading.Tasks.Task DeleteRoleAsync(string Role, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetUserProfile", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetUserProfileResponse")]
        UnionMall.ADServiceRef.UserProfile GetUserProfile(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetUserProfile", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetUserProfileResponse")]
        System.Threading.Tasks.Task<UnionMall.ADServiceRef.UserProfile> GetUserProfileAsync(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/SearchUserProfile", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/SearchUserProfileResponse")]
        UnionMall.ADServiceRef.UserProfile[] SearchUserProfile(string q, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/SearchUserProfile", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/SearchUserProfileResponse")]
        System.Threading.Tasks.Task<UnionMall.ADServiceRef.UserProfile[]> SearchUserProfileAsync(string q, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserExist", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserExistResponse")]
        bool IsUserExist(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserExist", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsUserExistResponse")]
        System.Threading.Tasks.Task<bool> IsUserExistAsync(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetAllRoles", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetAllRolesResponse")]
        string[] GetAllRoles(string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetAllRoles", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetAllRolesResponse")]
        System.Threading.Tasks.Task<string[]> GetAllRolesAsync(string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetAllUsers", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetAllUsersResponse")]
        string[] GetAllUsers(string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetAllUsers", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetAllUsersResponse")]
        System.Threading.Tasks.Task<string[]> GetAllUsersAsync(string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/ChangeCustomerUserPassword" +
            "", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/ChangeCustomerUserPassword" +
            "Response")]
        string ChangeCustomerUserPassword(string User, string OldPassword, string NewPassword, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/ChangeCustomerUserPassword" +
            "", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/ChangeCustomerUserPassword" +
            "Response")]
        System.Threading.Tasks.Task<string> ChangeCustomerUserPasswordAsync(string User, string OldPassword, string NewPassword, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/ChangeCustomerUserStatus", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/ChangeCustomerUserStatusRe" +
            "sponse")]
        string ChangeCustomerUserStatus(string Username, bool IsEnabled, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/ChangeCustomerUserStatus", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/ChangeCustomerUserStatusRe" +
            "sponse")]
        System.Threading.Tasks.Task<string> ChangeCustomerUserStatusAsync(string Username, bool IsEnabled, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/CreateCustomerUser", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/CreateCustomerUserResponse" +
            "")]
        string CreateCustomerUser(string User, string SecurityQuestion, string SecurityAnswer, string CreatedBy, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/CreateCustomerUser", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/CreateCustomerUserResponse" +
            "")]
        System.Threading.Tasks.Task<string> CreateCustomerUserAsync(string User, string SecurityQuestion, string SecurityAnswer, string CreatedBy, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/CustomAuthentication", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/CustomAuthenticationRespon" +
            "se")]
        bool CustomAuthentication(string Username, string Password, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/CustomAuthentication", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/CustomAuthenticationRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> CustomAuthenticationAsync(string Username, string Password, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsCustomerUserExist", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsCustomerUserExistRespons" +
            "e")]
        bool IsCustomerUserExist(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsCustomerUserExist", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsCustomerUserExistRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> IsCustomerUserExistAsync(string User, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/UpdateUserProfile", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/UpdateUserProfileResponse")]
        void UpdateUserProfile(string User, UnionMall.ADServiceRef.CustomProfile CustomerProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/UpdateUserProfile", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/UpdateUserProfileResponse")]
        System.Threading.Tasks.Task UpdateUserProfileAsync(string User, UnionMall.ADServiceRef.CustomProfile CustomerProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetModule", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetModuleResponse")]
        UnionMall.ADServiceRef.Module GetModule(string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetModule", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetModuleResponse")]
        System.Threading.Tasks.Task<UnionMall.ADServiceRef.Module> GetModuleAsync(string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetModules", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetModulesResponse")]
        UnionMall.ADServiceRef.Module[] GetModules();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetModules", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetModulesResponse")]
        System.Threading.Tasks.Task<UnionMall.ADServiceRef.Module[]> GetModulesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetBranchReportLine", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetBranchReportLineRespons" +
            "e")]
        UnionMall.ADServiceRef.BranchReportLine GetBranchReportLine(short BranchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetBranchReportLine", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetBranchReportLineRespons" +
            "e")]
        System.Threading.Tasks.Task<UnionMall.ADServiceRef.BranchReportLine> GetBranchReportLineAsync(short BranchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/AddModule", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/AddModuleResponse")]
        void AddModule(UnionMall.ADServiceRef.ModuleMin n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/AddModule", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/AddModuleResponse")]
        System.Threading.Tasks.Task AddModuleAsync(UnionMall.ADServiceRef.ModuleMin n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/UpdateModule", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/UpdateModuleResponse")]
        void UpdateModule(UnionMall.ADServiceRef.ModuleMin n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/UpdateModule", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/UpdateModuleResponse")]
        System.Threading.Tasks.Task UpdateModuleAsync(UnionMall.ADServiceRef.ModuleMin n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsModuleExist", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsModuleExistResponse")]
        bool IsModuleExist(string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsModuleExist", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/IsModuleExistResponse")]
        System.Threading.Tasks.Task<bool> IsModuleExistAsync(string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/RequestRemoveUserFromRoles" +
            "", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/RequestRemoveUserFromRoles" +
            "Response")]
        void RequestRemoveUserFromRoles(string User, string Role, string MakerId, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/RequestRemoveUserFromRoles" +
            "", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/RequestRemoveUserFromRoles" +
            "Response")]
        System.Threading.Tasks.Task RequestRemoveUserFromRolesAsync(string User, string Role, string MakerId, string ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetUserRoleEventStatus", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetUserRoleEventStatusResp" +
            "onse")]
        UnionMall.ADServiceRef.UserRoleEventStatus[] GetUserRoleEventStatus(string ModuleId, string Status, string EventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetUserRoleEventStatus", ReplyAction="http://applications.unionbankng.com/ws/UBN_SMS_Service/GetUserRoleEventStatusResp" +
            "onse")]
        System.Threading.Tasks.Task<UnionMall.ADServiceRef.UserRoleEventStatus[]> GetUserRoleEventStatusAsync(string ModuleId, string Status, string EventId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UBN_SMS_ServiceChannel : UnionMall.ADServiceRef.UBN_SMS_Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UBN_SMS_ServiceClient : System.ServiceModel.ClientBase<UnionMall.ADServiceRef.UBN_SMS_Service>, UnionMall.ADServiceRef.UBN_SMS_Service {
        
        public UBN_SMS_ServiceClient() {
        }
        
        public UBN_SMS_ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UBN_SMS_ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UBN_SMS_ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UBN_SMS_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AdAuthenticate(string User, string Password, string ModuleId) {
            return base.Channel.AdAuthenticate(User, Password, ModuleId);
        }
        
        public System.Threading.Tasks.Task<bool> AdAuthenticateAsync(string User, string Password, string ModuleId) {
            return base.Channel.AdAuthenticateAsync(User, Password, ModuleId);
        }
        
        public UnionMall.ADServiceRef.Response Ad2xAuthenticate(string User, string Password, string Token, string ModuleId) {
            return base.Channel.Ad2xAuthenticate(User, Password, Token, ModuleId);
        }
        
        public System.Threading.Tasks.Task<UnionMall.ADServiceRef.Response> Ad2xAuthenticateAsync(string User, string Password, string Token, string ModuleId) {
            return base.Channel.Ad2xAuthenticateAsync(User, Password, Token, ModuleId);
        }
        
        public UnionMall.ADServiceRef.Response TwoXtorAuth(string User, string Token, string ModuleId) {
            return base.Channel.TwoXtorAuth(User, Token, ModuleId);
        }
        
        public System.Threading.Tasks.Task<UnionMall.ADServiceRef.Response> TwoXtorAuthAsync(string User, string Token, string ModuleId) {
            return base.Channel.TwoXtorAuthAsync(User, Token, ModuleId);
        }
        
        public UnionMall.ADServiceRef.Response GenerateTwoXtorOtp(string User, string ModuleId) {
            return base.Channel.GenerateTwoXtorOtp(User, ModuleId);
        }
        
        public System.Threading.Tasks.Task<UnionMall.ADServiceRef.Response> GenerateTwoXtorOtpAsync(string User, string ModuleId) {
            return base.Channel.GenerateTwoXtorOtpAsync(User, ModuleId);
        }
        
        public UnionMall.ADServiceRef.Response GetTwoXtorUserProfile(string User, string ModuleId) {
            return base.Channel.GetTwoXtorUserProfile(User, ModuleId);
        }
        
        public System.Threading.Tasks.Task<UnionMall.ADServiceRef.Response> GetTwoXtorUserProfileAsync(string User, string ModuleId) {
            return base.Channel.GetTwoXtorUserProfileAsync(User, ModuleId);
        }
        
        public bool IsUserInRole(string User, string Role, string ModuleId) {
            return base.Channel.IsUserInRole(User, Role, ModuleId);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserInRoleAsync(string User, string Role, string ModuleId) {
            return base.Channel.IsUserInRoleAsync(User, Role, ModuleId);
        }
        
        public bool IsUserInAdRole(string User, string Role, string ModuleId) {
            return base.Channel.IsUserInAdRole(User, Role, ModuleId);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserInAdRoleAsync(string User, string Role, string ModuleId) {
            return base.Channel.IsUserInAdRoleAsync(User, Role, ModuleId);
        }
        
        public bool IsUserInCbaRole(string User, string Role, string ModuleId) {
            return base.Channel.IsUserInCbaRole(User, Role, ModuleId);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserInCbaRoleAsync(string User, string Role, string ModuleId) {
            return base.Channel.IsUserInCbaRoleAsync(User, Role, ModuleId);
        }
        
        public bool RoleExist(string Role, string ModuleId) {
            return base.Channel.RoleExist(Role, ModuleId);
        }
        
        public System.Threading.Tasks.Task<bool> RoleExistAsync(string Role, string ModuleId) {
            return base.Channel.RoleExistAsync(Role, ModuleId);
        }
        
        public string[] GetRolesForUser(string User, string ModuleId) {
            return base.Channel.GetRolesForUser(User, ModuleId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetRolesForUserAsync(string User, string ModuleId) {
            return base.Channel.GetRolesForUserAsync(User, ModuleId);
        }
        
        public string[] GetAdRolesForUser(string User, string ModuleId) {
            return base.Channel.GetAdRolesForUser(User, ModuleId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAdRolesForUserAsync(string User, string ModuleId) {
            return base.Channel.GetAdRolesForUserAsync(User, ModuleId);
        }
        
        public string[] GetCbaRolesForUser(string User, string ModuleId) {
            return base.Channel.GetCbaRolesForUser(User, ModuleId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetCbaRolesForUserAsync(string User, string ModuleId) {
            return base.Channel.GetCbaRolesForUserAsync(User, ModuleId);
        }
        
        public string[] GetUsersInRole(string Role, string ModuleId) {
            return base.Channel.GetUsersInRole(Role, ModuleId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUsersInRoleAsync(string Role, string ModuleId) {
            return base.Channel.GetUsersInRoleAsync(Role, ModuleId);
        }
        
        public void RemoveUserFromRoles(string User, string[] Role, string ModuleId) {
            base.Channel.RemoveUserFromRoles(User, Role, ModuleId);
        }
        
        public System.Threading.Tasks.Task RemoveUserFromRolesAsync(string User, string[] Role, string ModuleId) {
            return base.Channel.RemoveUserFromRolesAsync(User, Role, ModuleId);
        }
        
        public void AddUserToRole(string User, string Role, string Maker, string Checker, string ModuleId) {
            base.Channel.AddUserToRole(User, Role, Maker, Checker, ModuleId);
        }
        
        public System.Threading.Tasks.Task AddUserToRoleAsync(string User, string Role, string Maker, string Checker, string ModuleId) {
            return base.Channel.AddUserToRoleAsync(User, Role, Maker, Checker, ModuleId);
        }
        
        public string AuthorizeUserRole(string User, string Role, string Checker, bool IsAuthorized, string ModuleId) {
            return base.Channel.AuthorizeUserRole(User, Role, Checker, IsAuthorized, ModuleId);
        }
        
        public System.Threading.Tasks.Task<string> AuthorizeUserRoleAsync(string User, string Role, string Checker, bool IsAuthorized, string ModuleId) {
            return base.Channel.AuthorizeUserRoleAsync(User, Role, Checker, IsAuthorized, ModuleId);
        }
        
        public void CreateRole(string Role, string ModuleId) {
            base.Channel.CreateRole(Role, ModuleId);
        }
        
        public System.Threading.Tasks.Task CreateRoleAsync(string Role, string ModuleId) {
            return base.Channel.CreateRoleAsync(Role, ModuleId);
        }
        
        public void DeleteRole(string Role, string ModuleId) {
            base.Channel.DeleteRole(Role, ModuleId);
        }
        
        public System.Threading.Tasks.Task DeleteRoleAsync(string Role, string ModuleId) {
            return base.Channel.DeleteRoleAsync(Role, ModuleId);
        }
        
        public UnionMall.ADServiceRef.UserProfile GetUserProfile(string User, string ModuleId) {
            return base.Channel.GetUserProfile(User, ModuleId);
        }
        
        public System.Threading.Tasks.Task<UnionMall.ADServiceRef.UserProfile> GetUserProfileAsync(string User, string ModuleId) {
            return base.Channel.GetUserProfileAsync(User, ModuleId);
        }
        
        public UnionMall.ADServiceRef.UserProfile[] SearchUserProfile(string q, string ModuleId) {
            return base.Channel.SearchUserProfile(q, ModuleId);
        }
        
        public System.Threading.Tasks.Task<UnionMall.ADServiceRef.UserProfile[]> SearchUserProfileAsync(string q, string ModuleId) {
            return base.Channel.SearchUserProfileAsync(q, ModuleId);
        }
        
        public bool IsUserExist(string User, string ModuleId) {
            return base.Channel.IsUserExist(User, ModuleId);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserExistAsync(string User, string ModuleId) {
            return base.Channel.IsUserExistAsync(User, ModuleId);
        }
        
        public string[] GetAllRoles(string ModuleId) {
            return base.Channel.GetAllRoles(ModuleId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllRolesAsync(string ModuleId) {
            return base.Channel.GetAllRolesAsync(ModuleId);
        }
        
        public string[] GetAllUsers(string ModuleId) {
            return base.Channel.GetAllUsers(ModuleId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllUsersAsync(string ModuleId) {
            return base.Channel.GetAllUsersAsync(ModuleId);
        }
        
        public string ChangeCustomerUserPassword(string User, string OldPassword, string NewPassword, string ModuleId) {
            return base.Channel.ChangeCustomerUserPassword(User, OldPassword, NewPassword, ModuleId);
        }
        
        public System.Threading.Tasks.Task<string> ChangeCustomerUserPasswordAsync(string User, string OldPassword, string NewPassword, string ModuleId) {
            return base.Channel.ChangeCustomerUserPasswordAsync(User, OldPassword, NewPassword, ModuleId);
        }
        
        public string ChangeCustomerUserStatus(string Username, bool IsEnabled, string ModuleId) {
            return base.Channel.ChangeCustomerUserStatus(Username, IsEnabled, ModuleId);
        }
        
        public System.Threading.Tasks.Task<string> ChangeCustomerUserStatusAsync(string Username, bool IsEnabled, string ModuleId) {
            return base.Channel.ChangeCustomerUserStatusAsync(Username, IsEnabled, ModuleId);
        }
        
        public string CreateCustomerUser(string User, string SecurityQuestion, string SecurityAnswer, string CreatedBy, string ModuleId) {
            return base.Channel.CreateCustomerUser(User, SecurityQuestion, SecurityAnswer, CreatedBy, ModuleId);
        }
        
        public System.Threading.Tasks.Task<string> CreateCustomerUserAsync(string User, string SecurityQuestion, string SecurityAnswer, string CreatedBy, string ModuleId) {
            return base.Channel.CreateCustomerUserAsync(User, SecurityQuestion, SecurityAnswer, CreatedBy, ModuleId);
        }
        
        public bool CustomAuthentication(string Username, string Password, string ModuleId) {
            return base.Channel.CustomAuthentication(Username, Password, ModuleId);
        }
        
        public System.Threading.Tasks.Task<bool> CustomAuthenticationAsync(string Username, string Password, string ModuleId) {
            return base.Channel.CustomAuthenticationAsync(Username, Password, ModuleId);
        }
        
        public bool IsCustomerUserExist(string User, string ModuleId) {
            return base.Channel.IsCustomerUserExist(User, ModuleId);
        }
        
        public System.Threading.Tasks.Task<bool> IsCustomerUserExistAsync(string User, string ModuleId) {
            return base.Channel.IsCustomerUserExistAsync(User, ModuleId);
        }
        
        public void UpdateUserProfile(string User, UnionMall.ADServiceRef.CustomProfile CustomerProfile) {
            base.Channel.UpdateUserProfile(User, CustomerProfile);
        }
        
        public System.Threading.Tasks.Task UpdateUserProfileAsync(string User, UnionMall.ADServiceRef.CustomProfile CustomerProfile) {
            return base.Channel.UpdateUserProfileAsync(User, CustomerProfile);
        }
        
        public UnionMall.ADServiceRef.Module GetModule(string ModuleId) {
            return base.Channel.GetModule(ModuleId);
        }
        
        public System.Threading.Tasks.Task<UnionMall.ADServiceRef.Module> GetModuleAsync(string ModuleId) {
            return base.Channel.GetModuleAsync(ModuleId);
        }
        
        public UnionMall.ADServiceRef.Module[] GetModules() {
            return base.Channel.GetModules();
        }
        
        public System.Threading.Tasks.Task<UnionMall.ADServiceRef.Module[]> GetModulesAsync() {
            return base.Channel.GetModulesAsync();
        }
        
        public UnionMall.ADServiceRef.BranchReportLine GetBranchReportLine(short BranchCode) {
            return base.Channel.GetBranchReportLine(BranchCode);
        }
        
        public System.Threading.Tasks.Task<UnionMall.ADServiceRef.BranchReportLine> GetBranchReportLineAsync(short BranchCode) {
            return base.Channel.GetBranchReportLineAsync(BranchCode);
        }
        
        public void AddModule(UnionMall.ADServiceRef.ModuleMin n) {
            base.Channel.AddModule(n);
        }
        
        public System.Threading.Tasks.Task AddModuleAsync(UnionMall.ADServiceRef.ModuleMin n) {
            return base.Channel.AddModuleAsync(n);
        }
        
        public void UpdateModule(UnionMall.ADServiceRef.ModuleMin n) {
            base.Channel.UpdateModule(n);
        }
        
        public System.Threading.Tasks.Task UpdateModuleAsync(UnionMall.ADServiceRef.ModuleMin n) {
            return base.Channel.UpdateModuleAsync(n);
        }
        
        public bool IsModuleExist(string ModuleId) {
            return base.Channel.IsModuleExist(ModuleId);
        }
        
        public System.Threading.Tasks.Task<bool> IsModuleExistAsync(string ModuleId) {
            return base.Channel.IsModuleExistAsync(ModuleId);
        }
        
        public void RequestRemoveUserFromRoles(string User, string Role, string MakerId, string ModuleId) {
            base.Channel.RequestRemoveUserFromRoles(User, Role, MakerId, ModuleId);
        }
        
        public System.Threading.Tasks.Task RequestRemoveUserFromRolesAsync(string User, string Role, string MakerId, string ModuleId) {
            return base.Channel.RequestRemoveUserFromRolesAsync(User, Role, MakerId, ModuleId);
        }
        
        public UnionMall.ADServiceRef.UserRoleEventStatus[] GetUserRoleEventStatus(string ModuleId, string Status, string EventId) {
            return base.Channel.GetUserRoleEventStatus(ModuleId, Status, EventId);
        }
        
        public System.Threading.Tasks.Task<UnionMall.ADServiceRef.UserRoleEventStatus[]> GetUserRoleEventStatusAsync(string ModuleId, string Status, string EventId) {
            return base.Channel.GetUserRoleEventStatusAsync(ModuleId, Status, EventId);
        }
    }
}
